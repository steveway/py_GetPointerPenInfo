import win32con
import sys
import ctypes
from ctypes import *
from ctypes.wintypes import *

WNDPROC = WINFUNCTYPE(c_long, c_int, c_uint, c_int, c_int)

(PT_POINTER,
PT_TOUCH,
PT_PEN,
PT_MOUSE,
PT_TOUCHPAD)=map(ctypes.c_int,xrange(1,6))
 
'''
  POINTER_INPUT_TYPE         pointerType;
  UINT32                     pointerId;
  UINT32                     frameId;
  POINTER_FLAGS              pointerFlags;
  HANDLE                     sourceDevice;
  HWND                       hwndTarget;
  POINT                      ptPixelLocation;
  POINT                      ptHimetricLocation;
  POINT                      ptPixelLocationRaw;
  POINT                      ptHimetricLocationRaw;
  DWORD                      dwTime;
  UINT32                     historyCount;
  INT32                      inputData;
  DWORD                      dwKeyStates;
  UINT64                     PerformanceCount;
  POINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
'''
#class POINT(Structure):
#    _fields_ = [
#        ("x", LONG),
#        ("y", LONG),
#    ]

class POINTER_INFO(Structure):
    _fields_ = [
        ('pointerType', c_int),
        ('pointerId', c_uint32),
        ('frameId', c_uint32),
        ('pointerFlags', c_uint32),
        ("sourceDevice", HANDLE),
        ("hwndTarget", HWND),
        ("ptPixelLocation", POINT),
        ("ptHimetricLocation", POINT),
        ("ptPixelLocationRaw", POINT),
        ("ptHimetricLocationRaw", POINT),
        ("dwTime", DWORD),
        ('historyCount', c_uint32),
        ('inputData', c_int32),
        ("dwKeyStates", DWORD),
        ('PerformanceCount', c_uint64),
        ('ButtonChangeType', c_int),
    
    ]
    
'''
  POINTER_INFO pointerInfo;
  PEN_FLAGS    penFlags;
  PEN_MASK     penMask;
  UINT32       pressure;
  UINT32       rotation;
  INT32        tiltX;
  INT32        tiltY;
'''    
    
class POINTER_PEN_INFO(Structure):
    _fields_ = [
        ('pointerInfo', POINTER_INFO),
        ('penFlags', c_int),
        ('penMask', c_int),
        ('pressure', c_uint32),
        ('rotation', c_uint32),
        ('tiltX', c_int32),
        ('tiltY', c_int32),
    
    ]
    
#Möglicherweise keine Mainloop mit GetMessageA nötig
#

def MainLoop():
    GetPointerPenInfo = ctypes.windll.user32.GetPointerPenInfo
    GetLastError = ctypes.windll.kernel32.GetLastError
    penstruct = POINTER_PEN_INFO() 
    GetPointerPenInfo(c_uint32(0),byref(penstruct))
    print(penstruct.pressure)
    # Pump Messages
    hwnd = HWND(31234)
    msg = MSG()
    pMsg = pointer(msg)
    NULL = c_int(win32con.NULL)
    while windll.user32.GetMessageA( pMsg, hwnd, 0, 0) != 0:
        #print 'yo'
        #https://bugreports.qt.io/browse/QTBUG-40088
        if GetPointerPenInfo(c_uint32(4),ctypes.byref(penstruct)) != 0:
            print(penstruct.pressure)
        else:
            print(GetLastError())
        
        windll.user32.TranslateMessage(pMsg)
        windll.user32.DispatchMessageA(pMsg)

    return msg.wParam
    


if __name__ == "__main__":
    MainLoop()
